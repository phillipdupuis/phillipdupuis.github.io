---
import { Icon } from "astro-icon/components";
---

<div class="relative">
  <button
    id="dark-mode-menu-toggle"
    class="hover:brightness-125 transition-colors p-2"
  >
    <Icon name="moon" class="text-primary" />
  </button>
  <div
    id="dark-mode-menu"
    class="hidden absolute mt-1 py-2 pl-1 space-y-2 rounded border border-primary bg-card"
  >
    {
      [
        ["Light", "sun"],
        ["Dark", "moon"],
        ["System", "monitor-cog"],
      ].map(([mode, icon]) => (
        <div
          id={`dark-mode__${mode}`}
          class="flex text-nowrap gap-2 items-center px-2 text-muted-foreground cursor-pointer hover:text-primary"
        >
          <Icon name={icon} />
          <span>{mode}</span>
        </div>
      ))
    }
  </div>
</div>

<script>
  const button = document.getElementById("dark-mode-menu-toggle")!;
  const menu = document.getElementById("dark-mode-menu")!;
  const closeMenu = () => menu.classList.add("hidden");
  const setMode = (mode: "light" | "dark" | "system") => {
    if (mode === "system") {
      document.documentElement.classList.toggle(
        "dark",
        window.matchMedia("(prefers-color-scheme: dark)").matches
      );
      localStorage.removeItem("theme");
    } else {
      document.documentElement.classList.toggle("dark", mode === "dark");
      localStorage.setItem("theme", mode);
    }
    menu.classList.add("hidden");
  };
  button.addEventListener("click", (e) => {
    e.stopPropagation();
    menu.classList.toggle("hidden");
    if (!menu.classList.contains("hidden")) {
      menu.focus();
      document.addEventListener("click", closeMenu, { once: true });
    }
  });
  for (const mode of ["Light", "Dark", "System"]) {
    document
      .getElementById(`dark-mode__${mode}`)!
      .addEventListener("click", () => {
        setMode(mode.toLowerCase() as "light" | "dark" | "system");
      });
  }
</script>
